Exercise-2/main.cpp:11:9: warning:inconclusive: Member variable 'MockClass::m_value' is not initialized in the constructor. [uninitMemberVar]
        MockClass(){}
        ^
Exercise-2/headers/MyList.hpp:12:5: warning: Member variable 'Node < int >::value' is not initialized in the constructor. [uninitMemberVar]
    Node() {}
    ^
Exercise-2/headers/MyList.hpp:24:22: style:inconclusive: Technically the member function 'MyList < MockClass >::getSize' can be const. [functionConst]
        unsigned int getSize();
                     ^
Exercise-2/src/MyList.cpp:10:25: note: Technically the member function 'MyList < MockClass >::getSize' can be const.
unsigned int MyList<T>::getSize()
                        ^
Exercise-2/headers/MyList.hpp:24:22: note: Technically the member function 'MyList < MockClass >::getSize' can be const.
        unsigned int getSize();
                     ^
Exercise-2/headers/MyList.hpp:24:22: style:inconclusive: Technically the member function 'MyList < int >::getSize' can be const. [functionConst]
        unsigned int getSize();
                     ^
Exercise-2/src/MyList.cpp:10:25: note: Technically the member function 'MyList < int >::getSize' can be const.
unsigned int MyList<T>::getSize()
                        ^
Exercise-2/headers/MyList.hpp:24:22: note: Technically the member function 'MyList < int >::getSize' can be const.
        unsigned int getSize();
                     ^
Exercise-2/main.cpp:10:9: style: Class 'MockClass' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        MockClass( int value ): m_value(value){}
        ^
Exercise-2/tests/myList_unittest.cpp:186:9: warning:inconclusive: Member variable 'MockClass::m_value' is not initialized in the constructor. [uninitMemberVar]
        MockClass(){}
        ^
Exercise-2/headers/MyList.hpp:24:22: style:inconclusive: Technically the member function 'MyList < std :: string >::getSize' can be const. [functionConst]
        unsigned int getSize();
                     ^
Exercise-2/src/MyList.cpp:10:25: note: Technically the member function 'MyList < std :: string >::getSize' can be const.
unsigned int MyList<T>::getSize()
                        ^
Exercise-2/headers/MyList.hpp:24:22: note: Technically the member function 'MyList < std :: string >::getSize' can be const.
        unsigned int getSize();
                     ^
Exercise-2/tests/myList_unittest.cpp:185:9: style: Class 'MockClass' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        MockClass( int value ): m_value(value){}
        ^
Exercise-2/src/MyList.cpp:16:43: performance: Function parameter 'object' should be passed by const reference. [passedByValue]
utils::RESULT_CODE MyList<T>::back_push(T object)
                                          ^
nofile:0:0: information: Cppcheck cannot find all the include files (use --check-config for details) [missingInclude]

